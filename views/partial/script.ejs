<!-- Core JS -->
<script src="/socket.io/socket.io.js"></script>
<!-- build:js assets/vendor/js/core.js -->
<script src="/admin/assets/vendor/libs/jquery/jquery.js"></script>
<script src="/admin/assets/vendor/libs/popper/popper.js"></script>
<script src="/admin/assets/vendor/js/bootstrap.js"></script>
<script src="/admin/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>

<script src="/admin/assets/vendor/js/menu.js"></script>
<!-- endbuild -->

<!-- Vendors JS -->
<script src="/admin/assets/vendor/libs/apex-charts/apexcharts.js"></script>

<!-- Main JS -->
<script src="/admin/assets/js/main.js"></script>

<!-- Page JS -->
<script src="/admin/assets/js/dashboards-analytics.js"></script>

<!-- Page JS -->
<script src="/admin/assets/js/notify.js"></script>

<!-- Place this tag in your head or just before your close body tag. -->
<script async defer src="https://buttons.github.io/buttons.js"></script>
<!-- <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> -->
<script>
    let confirm = function (e) {

        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        })

        swalWithBootstrapButtons.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                var url = $(e).data('url');
                var id = $(e).data('id');
                $.ajax({
                    type: "get",
                    url: url,
                    success: function (response) {
                        console.log(response);
                        if (response['status'] == 200) {
                            location.reload();
                        }
                    }
                });

            } else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire(
                    'Cancelled',
                    'Your imaginary file is safe :)',
                    'error'
                )
            }
        })
    }

    $('#search').keyup(function () {
        let search = $(this).val();
        $.ajax({
            type: "get",
            url: "?search=" + search,
            success: function (response) {


                $('#table-content').html(response)
            }
        });
    })

    $('#check-all').click(function (event) {
        if (this.checked) {
            // Iterate each checkbox
            $(':checkbox').each(function () {
                this.checked = true;
            });
        } else {
            $(':checkbox').each(function () {
                this.checked = false;
            });
        }
    });

    multi_delete = function (e) {
        let multi_select = $('input[name="chk-item"]:checked');
        let data = Array();
        let url = $(e).data('url');

        $('input[name="chk-item"]:checked').each(function (e) {
            data.push($(this).val());
        });

        if (data.length) {
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, cancel!',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        url: url,
                        data: {
                            data: data
                        },

                        success: function (response) {
                            if (response['status'] == 200) {
                                location.reload()
                            }
                        }
                    });

                } else if (
                    /* Read more about handling dismissals below */
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        'Your imaginary file is safe :)',
                        'error'
                    )
                }
            })

        }

    }

    let filter = function (e) {
        let phan_tu = $('#perPage').val();
        let sort_field = $('#sort_field').val();
        let sort_type = $('#sort_type').val();
        let query = '?perPage=' + phan_tu + '&sort_field=' + sort_field + '&sort_type=' + sort_type;
        $.ajax({
            type: "get",
            url: query + '&type=1',
            success: function (response) {
                window.history.pushState('', '', query);
               
                $('#table-content').html(response)
            }
        });
    }
</script>
<script>

    $('#showToastPlacement').click(function (e) {
        e.preventDefault();
        $('.toast').addClass('show')
    });
    $(document).ready(function () {
        $(".icon").on('click', function (event) {
            if ($('.icon > i').hasClass('bx-minus')) {
                $('.icon > i').removeClass('bx-minus').addClass('bx-plus');
            } else {
                $('.icon > i').removeClass('bx-plus').addClass('bx-minus');
            }


        })
    });

</script>
<script>
    (function ($) {
        $(document).ready(function () {
            // get current URL path and assign 'active' class
            var pathname = window.location.pathname;
            $('.menu-item  > a[href="' + pathname + '"]').parent().addClass('active');
            $('.menu-item  > a[href="' + pathname + '"]').parent().parent().parent().addClass('active open');
        });
    })(jQuery);
    function formatDate(date) {

        var now = new Date();
        var now_month = now.getMonth();
        if (now_month > date.getMonth()) {
            return date.getMonth() + ' tháng trước'
        }
        var now_date = now.getDate();
        if (now_date > date.getDate()) {
            return date.getDate() + ' ngày trước'
        }
        var hours = date.getHours();
        var now_hours = now.getHours();
        if (now_hours > hours) {
            return hours + ' giờ trước'
        } else {
            return date.getMinutes() + ' phút trước'
        }
    }

    var socketConnection = io.connect();

    socketConnection.on('notice', function (data) {
       alert(data)
        var html = '<div class="toast-header"><i class="bx bx-bell me-2"></i>' +
            ' <div class="me-auto fw-semibold">Bootstrap</div> <small id="time-notice">' + formatDate(new Date(data.datetime)) + '</small> <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button></div>' + ' <div class="toast-body">' + data.msg + '</div>';
        $('.bs-toast').append(html);
    })



</script>
<script>
    $(function() {
  var INDEX = 0; 
  $("#chat-submit").click(function(e) {
    e.preventDefault();
    var msg = $("#chat-input").val(); 
    if(msg.trim() == ''){
      return false;
    }
    generate_message(msg, 'self');
    var buttons = [
        {
          name: 'Existing User',
          value: 'existing'
        },
        {
          name: 'New User',
          value: 'new'
        }
      ];
    setTimeout(function() {      
      generate_message(msg, 'user');  
    }, 1000)
    
  })
  
  function generate_message(msg, type) {
    INDEX++;
    var str="";
    str += "<div id='cm-msg-"+INDEX+"' class=\"chat-msg "+type+"\">";
    str += "          <span class=\"msg-avatar\">";
    str += "            <img src=\"https:\/\/image.crisp.im\/avatar\/operator\/196af8cc-f6ad-4ef7-afd1-c45d5231387c\/240\/?1483361727745\">";
    str += "          <\/span>";
    str += "          <div class=\"cm-msg-text\">";
    str += msg;
    str += "          <\/div>";
    str += "        <\/div>";
    $(".chat-logs").append(str);
    $("#cm-msg-"+INDEX).hide().fadeIn(300);
    if(type == 'self'){
     $("#chat-input").val(''); 
    }    
    $(".chat-logs").stop().animate({ scrollTop: $(".chat-logs")[0].scrollHeight}, 1000);    
  }  
  
  function generate_button_message(msg, buttons){    
    /* Buttons should be object array 
      [
        {
          name: 'Existing User',
          value: 'existing'
        },
        {
          name: 'New User',
          value: 'new'
        }
      ]
    */
    INDEX++;
    var btn_obj = buttons.map(function(button) {
       return  "              <li class=\"button\"><a href=\"javascript:;\" class=\"btn btn-primary chat-btn\" chat-value=\""+button.value+"\">"+button.name+"<\/a><\/li>";
    }).join('');
    var str="";
    str += "<div id='cm-msg-"+INDEX+"' class=\"chat-msg user\">";
    str += "          <span class=\"msg-avatar\">";
    str += "            <img src=\"https:\/\/image.crisp.im\/avatar\/operator\/196af8cc-f6ad-4ef7-afd1-c45d5231387c\/240\/?1483361727745\">";
    str += "          <\/span>";
    str += "          <div class=\"cm-msg-text\">";
    str += msg;
    str += "          <\/div>";
    str += "          <div class=\"cm-msg-button\">";
    str += "            <ul>";   
    str += btn_obj;
    str += "            <\/ul>";
    str += "          <\/div>";
    str += "        <\/div>";
    $(".chat-logs").append(str);
    $("#cm-msg-"+INDEX).hide().fadeIn(300);   
    $(".chat-logs").stop().animate({ scrollTop: $(".chat-logs")[0].scrollHeight}, 1000);
    $("#chat-input").attr("disabled", true);
  }
  
  $(document).delegate(".chat-btn", "click", function() {
    var value = $(this).attr("chat-value");
    var name = $(this).html();
    $("#chat-input").attr("disabled", false);
    generate_message(name, 'self');
  })
  
  $("#chat-circle").click(function() {    
    $("#chat-circle").toggle('scale');
    $(".chat-box").toggle('scale');
  })
  
  $(".chat-box-toggle").click(function() {
    $("#chat-circle").toggle('scale');
    $(".chat-box").toggle('scale');
  })
  
})
</script>