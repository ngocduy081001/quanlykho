{"version":3,"file":"index.js","names":["deepmerge","require","Cell","Row","Comment","Column","Style","utils","util","validXmlRegex","removeInvalidXml","str","Array","from","map","c","cp","codePointAt","match","join","stringSetter","val","_this","logger","ws","wb","warn","JSON","stringify","excelRefs","_typeof","merged","cells","forEach","string","getStringIndex","complexStringSetter","_this2","numberSetter","undefined","parseFloat","TypeError","format","i","number","booleanSetter","toString","toLowerCase","bool","formulaSetter","formula","dateSetter","thisDate","Date","isNaN","getTime","date","dtStyle","numberFormat","opts","dateFormat","styleSetter","bind","_this3","thisStyle","toObject","Object","borderEdges","border","outline","left","firstCol","right","lastCol","top","firstRow","bottom","lastRow","thisCellsBorder","row","col","s","thisCellStyle","createStyle","style","ids","cellXfs","curStyle","styles","newStyleOpts","mergedStyle","hyperlinkSetter","url","displayStr","tooltip","_this4","ref","hyperlinkCollection","add","location","display","font","color","underline","commentSetter","comment","options","_this5","comments","r","mergeCells","cellBlock","length","sort","sortCellRefs","cellRange","rangeCells","okToMerge","mergedCells","cr","curCells","getAllCellsInExcelRange","intersection","arrayIntersectSafe","error","concat","push","_classCallCheck","_createClass","key","get","matrix","tmpObj","rows","keys","a","b","cellAccessor","row1","col1","row2","col2","isMerged","theseCells","lastUsedRow","lastUsedCol","getExcelAlpha","cellRefs","indexOf","prototype","link","module","exports"],"sources":["../../../source/lib/cell/index.js"],"sourcesContent":["const deepmerge = require('deepmerge');\nconst Cell = require('./cell.js');\nconst Row = require('../row/row.js');\nconst Comment = require('../classes/comment');\nconst Column = require('../column/column.js');\nconst Style = require('../style/style.js');\nconst utils = require('../utils.js');\nconst util = require('util');\n\nconst validXmlRegex = /[\\u0009\\u000a\\u000d\\u0020-\\uD7FF\\uE000-\\uFFFD]/u;\n\n/**\n * The list of valid characters is\n * #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]\n *\n * We need to test codepoints numerically, instead of regex characters above 65536 (0x10000),\n */\nfunction removeInvalidXml(str) {\n    return Array.from(str).map(c => {\n        const cp = c.codePointAt(0);\n        if (cp >= 65536 && cp <= 1114111) {\n            return c\n        } else if (c.match(validXmlRegex)) {\n            return c;\n        } else {\n            return '';\n        }\n    }).join('');\n}\n\nfunction stringSetter(val) {\n    let logger = this.ws.wb.logger;\n\n    if (typeof (val) !== 'string') {\n        logger.warn('Value sent to String function of cells %s was not a string, it has type of %s',\n            JSON.stringify(this.excelRefs),\n            typeof (val));\n        val = '';\n    }\n    val = removeInvalidXml(val);\n\n    if (!this.merged) {\n        this.cells.forEach((c) => {\n            c.string(this.ws.wb.getStringIndex(val));\n        });\n    } else {\n        let c = this.cells[0];\n        c.string(this.ws.wb.getStringIndex(val));\n    }\n    return this;\n}\n\nfunction complexStringSetter(val) {\n    if (!this.merged) {\n        this.cells.forEach((c) => {\n            c.string(this.ws.wb.getStringIndex(val));\n        });\n    } else {\n        let c = this.cells[0];\n        c.string(this.ws.wb.getStringIndex(val));\n    }\n    return this;\n}\n\nfunction numberSetter(val) {\n    if (val === undefined || parseFloat(val) !== val) {\n        throw new TypeError(util.format('Value sent to Number function of cells %s was not a number, it has type of %s and value of %s',\n            JSON.stringify(this.excelRefs),\n            typeof (val),\n            val\n        ));\n    }\n    val = parseFloat(val);\n\n    if (!this.merged) {\n        this.cells.forEach((c, i) => {\n            c.number(val);\n        });\n    } else {\n        var c = this.cells[0];\n        c.number(val);\n    }\n    return this;\n}\n\nfunction booleanSetter(val) {\n    if (val === undefined || typeof (val.toString().toLowerCase() === 'true' || ((val.toString().toLowerCase() === 'false') ? false : val)) !== 'boolean') {\n        throw new TypeError(util.format('Value sent to Bool function of cells %s was not a bool, it has type of %s and value of %s',\n            JSON.stringify(this.excelRefs),\n            typeof (val),\n            val\n        ));\n    }\n    val = val.toString().toLowerCase() === 'true';\n\n    if (!this.merged) {\n        this.cells.forEach((c, i) => {\n            c.bool(val.toString());\n        });\n    } else {\n        var c = this.cells[0];\n        c.bool(val.toString());\n    }\n    return this;\n}\n\nfunction formulaSetter(val) {\n    if (typeof (val) !== 'string') {\n        throw new TypeError(util.format('Value sent to Formula function of cells %s was not a string, it has type of %s', JSON.stringify(this.excelRefs), typeof (val)));\n    }\n    if (this.merged !== true) {\n        this.cells.forEach((c, i) => {\n            c.formula(val);\n        });\n    } else {\n        var c = this.cells[0];\n        c.formula(val);\n    }\n\n    return this;\n}\n\nfunction dateSetter(val) {\n    let thisDate = new Date(val);\n    if (isNaN(thisDate.getTime())) {\n        throw new TypeError(util.format('Invalid date sent to date function of cells. %s could not be converted to a date.', val));\n    }\n    if (this.merged !== true) {\n        this.cells.forEach((c, i) => {\n            c.date(thisDate);\n        });\n    } else {\n        var c = this.cells[0];\n        c.date(thisDate);\n    }\n    const dtStyle = new Style(this.ws.wb, {\n        numberFormat: '[$-409]' + this.ws.wb.opts.dateFormat\n    });\n    return styleSetter.bind(this)(dtStyle);\n}\n\nfunction styleSetter(val) {\n    let thisStyle;\n    if (val instanceof Style) {\n        thisStyle = val.toObject();\n    } else if (val instanceof Object) {\n        thisStyle = val;\n    } else {\n        throw new TypeError(util.format('Parameter sent to Style function must be an instance of a Style or a style configuration object'));\n    }\n\n    let borderEdges = {};\n    if (thisStyle.border && thisStyle.border.outline) {\n        borderEdges.left = this.firstCol;\n        borderEdges.right = this.lastCol;\n        borderEdges.top = this.firstRow;\n        borderEdges.bottom = this.lastRow;\n    }\n\n    this.cells.forEach((c) => {\n        if (thisStyle.border && thisStyle.border.outline) {\n            let thisCellsBorder = {};\n            if (c.row === borderEdges.top && thisStyle.border.top) {\n                thisCellsBorder.top = thisStyle.border.top;\n            }\n            if (c.row === borderEdges.bottom && thisStyle.border.bottom) {\n                thisCellsBorder.bottom = thisStyle.border.bottom;\n            }\n            if (c.col === borderEdges.left && thisStyle.border.left) {\n                thisCellsBorder.left = thisStyle.border.left;\n            }\n            if (c.col === borderEdges.right && thisStyle.border.right) {\n                thisCellsBorder.right = thisStyle.border.right;\n            }\n            thisStyle.border = thisCellsBorder;\n        }\n\n        if (c.s === 0) {\n            let thisCellStyle = this.ws.wb.createStyle(thisStyle);\n            c.style(thisCellStyle.ids.cellXfs);\n        } else {\n            let curStyle = this.ws.wb.styles[c.s];\n            let newStyleOpts = deepmerge(curStyle.toObject(), thisStyle);\n            let mergedStyle = this.ws.wb.createStyle(newStyleOpts);\n            c.style(mergedStyle.ids.cellXfs);\n        }\n    });\n    return this;\n}\n\nfunction hyperlinkSetter(url, displayStr, tooltip) {\n    this.excelRefs.forEach((ref) => {\n        displayStr = typeof displayStr === 'string' ? displayStr : url;\n        this.ws.hyperlinkCollection.add({\n            location: url,\n            display: displayStr,\n            tooltip: tooltip,\n            ref: ref\n        });\n    });\n    stringSetter.bind(this)(displayStr);\n    return styleSetter.bind(this)({\n        font: {\n            color: 'Blue',\n            underline: true\n        }\n    });\n}\n\nfunction commentSetter(comment, options) {\n    if (this.merged !== true) {\n        this.cells.forEach((c, i) => {\n            this.ws.comments[c.r] = new Comment(c.r, comment, options)\n        });\n    } else {\n        var c = this.cells[0];\n        this.ws.comments[c.r] = new Comment(c.r, comment, options)\n    }\n    return this;\n}\n\nfunction mergeCells(cellBlock) {\n    let excelRefs = cellBlock.excelRefs;\n    if (excelRefs instanceof Array && excelRefs.length > 0) {\n        excelRefs.sort(utils.sortCellRefs);\n\n        let cellRange = excelRefs[0] + ':' + excelRefs[excelRefs.length - 1];\n        let rangeCells = excelRefs;\n\n        let okToMerge = true;\n        cellBlock.ws.mergedCells.forEach((cr) => {\n            // Check to see if currently merged cells contain cells in new merge request\n            let curCells = utils.getAllCellsInExcelRange(cr);\n            let intersection = utils.arrayIntersectSafe(rangeCells, curCells);\n            if (intersection.length > 0) {\n                okToMerge = false;\n                cellBlock.ws.wb.logger.error(`Invalid Range for: ${cellRange}. Some cells in this range are already included in another merged cell range: ${cr}.`);\n            }\n        });\n        if (okToMerge) {\n            cellBlock.ws.mergedCells.push(cellRange);\n        }\n    } else {\n        throw new TypeError(util.format('excelRefs variable sent to mergeCells function must be an array with length > 0'));\n    }\n}\n\n/**\n * @class cellBlock\n */\nclass cellBlock {\n\n    constructor() {\n        this.ws;\n        this.cells = [];\n        this.excelRefs = [];\n        this.merged = false;\n    }\n\n    get matrix() {\n        let matrix = [];\n        let tmpObj = {};\n        this.cells.forEach((c) => {\n            if (!tmpObj[c.row]) {\n                tmpObj[c.row] = [];\n            }\n            tmpObj[c.row].push(c);\n        });\n        let rows = Object.keys(tmpObj);\n        rows.forEach((r) => {\n            tmpObj[r].sort((a, b) => {\n                return a.col - b.col;\n            });\n            matrix.push(tmpObj[r]);\n        });\n        return matrix;\n    }\n\n    get firstRow() {\n        let firstRow;\n        this.cells.forEach((c) => {\n            if (c.row < firstRow || firstRow === undefined) {\n                firstRow = c.row;\n            }\n        });\n        return firstRow;\n    }\n\n    get lastRow() {\n        let lastRow;\n        this.cells.forEach((c) => {\n            if (c.row > lastRow || lastRow === undefined) {\n                lastRow = c.row;\n            }\n        });\n        return lastRow;\n    }\n\n    get firstCol() {\n        let firstCol;\n        this.cells.forEach((c) => {\n            if (c.col < firstCol || firstCol === undefined) {\n                firstCol = c.col;\n            }\n        });\n        return firstCol;\n    }\n\n    get lastCol() {\n        let lastCol;\n        this.cells.forEach((c) => {\n            if (c.col > lastCol || lastCol === undefined) {\n                lastCol = c.col;\n            }\n        });\n        return lastCol;\n    }\n}\n\n/**\n * Module repesenting a Cell Accessor\n * @alias Worksheet.cell\n * @namespace\n * @func Worksheet.cell\n * @desc Access a range of cells in order to manipulate values\n * @param {Number} row1 Row of top left cell\n * @param {Number} col1 Column of top left cell\n * @param {Number} row2 Row of bottom right cell (optional)\n * @param {Number} col2 Column of bottom right cell (optional)\n * @param {Boolean} isMerged Merged the cell range into a single cell\n * @returns {cellBlock}\n */\nfunction cellAccessor(row1, col1, row2, col2, isMerged) {\n    let theseCells = new cellBlock();\n    theseCells.ws = this;\n\n    row2 = row2 ? row2 : row1;\n    col2 = col2 ? col2 : col1;\n\n    if (row2 > this.lastUsedRow) {\n        this.lastUsedRow = row2;\n    }\n\n    if (col2 > this.lastUsedCol) {\n        this.lastUsedCol = col2;\n    }\n\n    for (let r = row1; r <= row2; r++) {\n        for (let c = col1; c <= col2; c++) {\n            let ref = `${utils.getExcelAlpha(c)}${r}`;\n            if (!this.cells[ref]) {\n                this.cells[ref] = new Cell(r, c);\n            }\n            if (!this.rows[r]) {\n                this.rows[r] = new Row(r, this);\n            }\n            if (this.rows[r].cellRefs.indexOf(ref) < 0) {\n                this.rows[r].cellRefs.push(ref);\n            }\n\n            theseCells.cells.push(this.cells[ref]);\n            theseCells.excelRefs.push(ref);\n        }\n    }\n    if (isMerged) {\n        theseCells.merged = true;\n        mergeCells(theseCells);\n    }\n\n    return theseCells;\n}\n\n/**\n * @alias cellBlock.string\n * @func cellBlock.string\n * @param {String} val Value of String\n * @returns {cellBlock} Block of cells with attached methods\n */\ncellBlock.prototype.string = function (val) {\n    if (val instanceof Array) {\n        return complexStringSetter.bind(this)(val);\n    } else {\n        return stringSetter.bind(this)(val);\n    }\n};\n\n/**\n * @alias cellBlock.style\n * @func cellBlock.style\n * @param {Object} style One of a Style instance or an object with Style parameters\n * @returns {cellBlock} Block of cells with attached methods\n */\ncellBlock.prototype.style = styleSetter;\n\n/**\n * @alias cellBlock.number\n * @func cellBlock.number\n * @param {Number} val Value of Number\n * @returns {cellBlock} Block of cells with attached methods\n */\ncellBlock.prototype.number = numberSetter;\n\n/**\n * @alias cellBlock.bool\n * @func cellBlock.bool\n * @param {Boolean} val Value of Boolean\n * @returns {cellBlock} Block of cells with attached methods\n */\ncellBlock.prototype.bool = booleanSetter;\n\n/**\n * @alias cellBlock.formula\n * @func cellBlock.formula\n * @param {String} val Excel style formula as string\n * @returns {cellBlock} Block of cells with attached methods\n */\ncellBlock.prototype.formula = formulaSetter;\n\n/**\n * @alias cellBlock.date\n * @func cellBlock.date\n * @param {Date} val Value of Date\n * @returns {cellBlock} Block of cells with attached methods\n */\ncellBlock.prototype.date = dateSetter;\n\n/**\n * @alias cellBlock.link\n * @func cellBlock.link\n * @param {String} url Value of Hyperlink URL\n * @param {String} displayStr Value of String representation of URL\n * @param {String} tooltip Value of text to display as hover\n * @returns {cellBlock} Block of cells with attached methods\n */\ncellBlock.prototype.link = hyperlinkSetter;\n\ncellBlock.prototype.comment = commentSetter;\n\nmodule.exports = cellAccessor;"],"mappings":"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"}